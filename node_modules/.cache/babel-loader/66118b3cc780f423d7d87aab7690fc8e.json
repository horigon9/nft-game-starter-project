{"ast":null,"code":"var _jsxFileName = \"/Users/horiishingo/ETH-NFT-game/nft-game-starter-project/src/Components/Arena/index.js\",\n    _s = $RefreshSig$();\n\nimport LoadingIndicator from \"../LoadingIndicator\";\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESS, transformCharacterData } from \"../../constants\";\nimport myEpicGame from \"../../utils/MyEpicGame.json\";\nimport \"./Arena.css\"; // フロントエンドにNFTキャラクターを表示するため、characterNFTのメタデータを渡します。\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Arena = _ref => {\n  _s();\n\n  let {\n    characterNFT,\n    setCharacterNFT\n  } = _ref;\n  // コントラクトのデータを保有する状態変数を初期化します。\n  const [gameContract, setGameContract] = useState(null); // ボスのメタデータを保存する状態変数を初期化します\n\n  const [boss, setBoss] = useState(null); // 攻撃の状態を保存する変数を初期化します。\n\n  const [attackState, setAttackState] = useState(\"\"); //攻撃ダメージの表示形式を保存する変数を初期化します\n\n  const [showToast, setShowToast] = useState(false); // NFTキャラクターがBossを攻撃する際に使用する関数を定義します\n\n  const runAttackAction = async () => {\n    try {\n      // コントラクトが呼び出されたことを確認します。\n      if (gameContract) {\n        // attackState の状態を attacking に設定します。\n        setAttackState(\"attacking\");\n        console.log(\"Attacking boss...\"); // NFT キャラクターがボスを攻撃します。\n\n        const attackTxn = await gameContract.attackBoss(); // トランザクションがマイニングされるまで待ちます。\n\n        await attackTxn.wait();\n        console.log(\"attackTxn:\", attackTxn); // attackState の状態を hit に設定します。\n\n        setAttackState(\"hit\"); // 攻撃ダメージの表示をtrueに設定し（表示）5秒後にfalseに設定する（非表示）\n\n        setShowToast(true);\n        setTimeout(() => {\n          setShowToast(false);\n        }, 5000);\n      }\n    } catch (error) {\n      console.error(\"Error attacking boss:\", error);\n      setAttackState(\"\");\n    }\n  }; //ページがロードされると下記が実行される\n\n\n  useEffect(() => {\n    // ボスのデータをコントラクトから読み込む関数を設定します。\n    const fetchBoss = async () => {\n      //ボスのメタデータをコントラクトをから呼び出します。\n      const bossTxn = await gameContract.getBigBoss();\n      console.log(\"Boss:\", bossTxn); // ボスの状態を設定します。\n\n      setBoss(transformCharacterData(bossTxn));\n    }; // AttackCompleteイベントを受信したときに起動するコールバックメソッドを追加します。\n\n\n    const onAttackComplete = (newBossHp, newPlayerHp) => {\n      // ボスの新しいHPを取得します。\n      const bossHp = newBossHp.toNumber(); // NFT キャラクターの新しいHPを取得します。\n\n      const playerHp = newPlayerHp.toNumber();\n      console.log(`AttackComplete: Boss Hp: ${bossHp} Player Hp: ${playerHp}`); // NFT キャラクターとボスのHPを更新します。\n\n      setBoss(prevState => {\n        return { ...prevState,\n          hp: bossHp\n        };\n      });\n      setCharacterNFT(prevState => {\n        return { ...prevState,\n          hp: playerHp\n        };\n      });\n    }; // コントラクトが呼び出されていたら、下記を実行します。\n\n\n    if (gameContract) {\n      fetchBoss(); // リスナーの設定：ボスが攻撃された通知を受け取ります。\n\n      gameContract.on(\"AttackComplete\", onAttackComplete);\n    } // コンポーネントがマウントされたら、リスナーを停止する。\n\n\n    return () => {\n      if (gameContract) {\n        gameContract.off(\"AttackComplete\", onAttackComplete);\n      }\n    };\n  }, [gameContract]); // ページがロードされると下記が実行されます。\n\n  useEffect(() => {\n    const {\n      ethereum\n    } = window;\n\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const gameContract = new ethers.Contract(CONTRACT_ADDRESS, myEpicGame.abi, signer);\n      setGameContract(gameContract);\n    } else {\n      console.log(\"Ethereum object not found\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"arena-container\",\n    children: [boss && characterNFT && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"toast\",\n      className: showToast ? \"show\" : \"\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"desc\",\n        children: `💣${boss.name} was hit for ${characterNFT.attackDamage}!`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), boss && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boss-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `boss-content ${attackState}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"\\uD83D\\uDD25 \", boss.name, \" \\uD83D\\uDD25 \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: boss.imageURI,\n            alt: `Boss ${boss.name}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"health-bar\",\n            children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n              value: boss.hp,\n              max: boss.maxHp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `${boss.hp} / ${boss.maxHp} HP`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"attack-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cta-button\",\n          onClick: runAttackAction,\n          children: `🧨 Attack ${boss.name}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }, this), attackState === \"attacking\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(LoadingIndicator, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Attacking \\uD83D\\uDE21\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }, this), characterNFT && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"players-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your Character\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: characterNFT.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `https://cloudflare-ipfs.com/ipfs/${characterNFT.imageURI}`,\n              alt: `Character ${characterNFT.name}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"health-bar\",\n              children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n                value: characterNFT.hp,\n                max: characterNFT.maxHp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: `${characterNFT.hp} / ${characterNFT.maxHp} HP`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stats\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: `⚔️ Attack Damage: ${characterNFT.attackDamage}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Arena, \"30K7Lc/ijIzASkE4LIZ33tG48Ww=\");\n\n_c = Arena;\nexport default Arena;\n\nvar _c;\n\n$RefreshReg$(_c, \"Arena\");","map":{"version":3,"names":["LoadingIndicator","React","useEffect","useState","ethers","CONTRACT_ADDRESS","transformCharacterData","myEpicGame","Arena","characterNFT","setCharacterNFT","gameContract","setGameContract","boss","setBoss","attackState","setAttackState","showToast","setShowToast","runAttackAction","console","log","attackTxn","attackBoss","wait","setTimeout","error","fetchBoss","bossTxn","getBigBoss","onAttackComplete","newBossHp","newPlayerHp","bossHp","toNumber","playerHp","prevState","hp","on","off","ethereum","window","provider","providers","Web3Provider","signer","getSigner","Contract","abi","name","attackDamage","imageURI","maxHp"],"sources":["/Users/horiishingo/ETH-NFT-game/nft-game-starter-project/src/Components/Arena/index.js"],"sourcesContent":["import LoadingIndicator from \"../LoadingIndicator\";\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESS, transformCharacterData } from \"../../constants\";\nimport myEpicGame from \"../../utils/MyEpicGame.json\";\nimport \"./Arena.css\";\n\n// フロントエンドにNFTキャラクターを表示するため、characterNFTのメタデータを渡します。\nconst Arena = ({ characterNFT, setCharacterNFT }) => {\n  // コントラクトのデータを保有する状態変数を初期化します。\n  const [gameContract, setGameContract] = useState(null);\n\n  // ボスのメタデータを保存する状態変数を初期化します\n  const [boss, setBoss] = useState(null);\n\n  // 攻撃の状態を保存する変数を初期化します。\n  const [attackState, setAttackState] = useState(\"\");\n\n  //攻撃ダメージの表示形式を保存する変数を初期化します\n  const [showToast, setShowToast] = useState(false);\n\n  // NFTキャラクターがBossを攻撃する際に使用する関数を定義します\n  const runAttackAction = async () => {\n    try {\n        // コントラクトが呼び出されたことを確認します。\n        if (gameContract) {\n          // attackState の状態を attacking に設定します。\n          setAttackState(\"attacking\");\n          console.log(\"Attacking boss...\");\n    \n          // NFT キャラクターがボスを攻撃します。\n          const attackTxn = await gameContract.attackBoss();\n    \n          // トランザクションがマイニングされるまで待ちます。\n          await attackTxn.wait();\n          console.log(\"attackTxn:\", attackTxn);\n    \n          // attackState の状態を hit に設定します。\n          setAttackState(\"hit\");\n\n          // 攻撃ダメージの表示をtrueに設定し（表示）5秒後にfalseに設定する（非表示）\n          setShowToast(true);\n          setTimeout(() => {\n              setShowToast(false);\n          }, 5000);\n        }\n      } catch (error) {\n        console.error(\"Error attacking boss:\", error);\n        setAttackState(\"\");\n      }\n  };\n\n  //ページがロードされると下記が実行される\n  useEffect(() => {\n      // ボスのデータをコントラクトから読み込む関数を設定します。\n  const fetchBoss = async () => {\n        //ボスのメタデータをコントラクトをから呼び出します。\n        const bossTxn = await gameContract.getBigBoss();\n        console.log(\"Boss:\", bossTxn);\n        // ボスの状態を設定します。\n        setBoss(transformCharacterData(bossTxn));\n    };\n\n    // AttackCompleteイベントを受信したときに起動するコールバックメソッドを追加します。\n    const onAttackComplete = (newBossHp, newPlayerHp) => {\n        // ボスの新しいHPを取得します。\n        const bossHp = newBossHp.toNumber();\n        // NFT キャラクターの新しいHPを取得します。\n        const playerHp = newPlayerHp.toNumber();\n        console.log(`AttackComplete: Boss Hp: ${bossHp} Player Hp: ${playerHp}`);\n\n        // NFT キャラクターとボスのHPを更新します。\n        setBoss((prevState) => {\n        return { ...prevState, hp: bossHp };\n        });\n        setCharacterNFT((prevState) => {\n        return { ...prevState, hp: playerHp };\n        });\n    };\n\n    // コントラクトが呼び出されていたら、下記を実行します。\n    if (gameContract) {\n        fetchBoss();\n        // リスナーの設定：ボスが攻撃された通知を受け取ります。\n        gameContract.on(\"AttackComplete\", onAttackComplete);\n    }\n\n    // コンポーネントがマウントされたら、リスナーを停止する。\n    return () => {\n        if (gameContract) {\n        gameContract.off(\"AttackComplete\", onAttackComplete);\n        }\n    };\n  },[gameContract]);\n\n\n  // ページがロードされると下記が実行されます。\n  useEffect(() => {\n    const { ethereum } = window;\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const gameContract = new ethers.Contract(\n        CONTRACT_ADDRESS,\n        myEpicGame.abi,\n        signer\n      );\n      setGameContract(gameContract);\n    } else {\n      console.log(\"Ethereum object not found\");\n    }\n  }, []);\n  return (\n    <div className=\"arena-container\">\n        {/* 攻撃ダメージの通知を追加します */}\n        {boss && characterNFT && (\n            <div id=\"toast\" className={showToast ? \"show\" : \"\"}>\n                <div id = \"desc\">{`💣${boss.name} was hit for ${characterNFT.attackDamage}!`}</div>\n            </div>\n        )}\n      {/* ボスをレンダリングします */}\n      {boss && (\n          <div className=\"boss-container\">\n              {/* attackStateを追加します */}\n              <div className={`boss-content ${attackState}`}>\n                  <h2>🔥 {boss.name} 🔥 </h2>\n                  <div className=\"image-content\">\n                      <img src={boss.imageURI} alt={`Boss ${boss.name}`}/>\n                      <div className=\"health-bar\">\n                          <progress value={boss.hp} max={boss.maxHp}/>\n                          <p>{`${boss.hp} / ${boss.maxHp} HP`}</p>\n                      </div>\n                  </div>\n              </div>\n              <div className=\"attack-container\">\n                  <button className=\"cta-button\" onClick={runAttackAction}>\n                      {`🧨 Attack ${boss.name}` }\n                  </button>\n              </div>\n              {/* Attack ボタンの下にローディングマークを追加します */}\n              {attackState === \"attacking\" && (\n                  <div className=\"loading-indicator\">\n                      <LoadingIndicator/>\n                      <p>Attacking 😡</p>\n                  </div>\n              )}\n          </div>\n      )}\n      {/* NFT キャラクター をレンダリング*/}\n      {characterNFT && (\n      <div className=\"players-container\">\n        <div className=\"player-container\">\n          <h2>Your Character</h2>\n          <div className=\"player\">\n            <div className=\"image-content\">\n              <h2>{characterNFT.name}</h2>\n              <img\n                src={`https://cloudflare-ipfs.com/ipfs/${characterNFT.imageURI}`}\n                alt={`Character ${characterNFT.name}`}\n              />\n              <div className=\"health-bar\">\n                <progress value={characterNFT.hp} max={characterNFT.maxHp} />\n                <p>{`${characterNFT.hp} / ${characterNFT.maxHp} HP`}</p>\n              </div>\n            </div>\n            <div className=\"stats\">\n              <h4>{`⚔️ Attack Damage: ${characterNFT.attackDamage}`}</h4>\n            </div>\n          </div>\n        </div>\n        {/* <div className=\"active-players\">\n            <h2>Active Players</h2>\n            <div className=\"players-list\">{renderActiveplayerslist()}</div>\n            </div> */}\n      </div>\n    )}\n    </div>\n  );\n};\nexport default Arena;"],"mappings":";;;AAAA,OAAOA,gBAAP,MAA6B,qBAA7B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,gBAAT,EAA2BC,sBAA3B,QAAyD,iBAAzD;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAO,aAAP,C,CAEA;;;;AACA,MAAMC,KAAK,GAAG,QAAuC;EAAA;;EAAA,IAAtC;IAAEC,YAAF;IAAgBC;EAAhB,CAAsC;EACnD;EACA,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,IAAD,CAAhD,CAFmD,CAInD;;EACA,MAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,IAAD,CAAhC,CALmD,CAOnD;;EACA,MAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,EAAD,CAA9C,CARmD,CAUnD;;EACA,MAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,KAAD,CAA1C,CAXmD,CAanD;;EACA,MAAMgB,eAAe,GAAG,YAAY;IAClC,IAAI;MACA;MACA,IAAIR,YAAJ,EAAkB;QAChB;QACAK,cAAc,CAAC,WAAD,CAAd;QACAI,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAHgB,CAKhB;;QACA,MAAMC,SAAS,GAAG,MAAMX,YAAY,CAACY,UAAb,EAAxB,CANgB,CAQhB;;QACA,MAAMD,SAAS,CAACE,IAAV,EAAN;QACAJ,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BC,SAA1B,EAVgB,CAYhB;;QACAN,cAAc,CAAC,KAAD,CAAd,CAbgB,CAehB;;QACAE,YAAY,CAAC,IAAD,CAAZ;QACAO,UAAU,CAAC,MAAM;UACbP,YAAY,CAAC,KAAD,CAAZ;QACH,CAFS,EAEP,IAFO,CAAV;MAGD;IACF,CAvBH,CAuBI,OAAOQ,KAAP,EAAc;MACdN,OAAO,CAACM,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;MACAV,cAAc,CAAC,EAAD,CAAd;IACD;EACJ,CA5BD,CAdmD,CA4CnD;;;EACAd,SAAS,CAAC,MAAM;IACZ;IACJ,MAAMyB,SAAS,GAAG,YAAY;MACxB;MACA,MAAMC,OAAO,GAAG,MAAMjB,YAAY,CAACkB,UAAb,EAAtB;MACAT,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBO,OAArB,EAHwB,CAIxB;;MACAd,OAAO,CAACR,sBAAsB,CAACsB,OAAD,CAAvB,CAAP;IACH,CANH,CAFgB,CAUd;;;IACA,MAAME,gBAAgB,GAAG,CAACC,SAAD,EAAYC,WAAZ,KAA4B;MACjD;MACA,MAAMC,MAAM,GAAGF,SAAS,CAACG,QAAV,EAAf,CAFiD,CAGjD;;MACA,MAAMC,QAAQ,GAAGH,WAAW,CAACE,QAAZ,EAAjB;MACAd,OAAO,CAACC,GAAR,CAAa,4BAA2BY,MAAO,eAAcE,QAAS,EAAtE,EALiD,CAOjD;;MACArB,OAAO,CAAEsB,SAAD,IAAe;QACvB,OAAO,EAAE,GAAGA,SAAL;UAAgBC,EAAE,EAAEJ;QAApB,CAAP;MACC,CAFM,CAAP;MAGAvB,eAAe,CAAE0B,SAAD,IAAe;QAC/B,OAAO,EAAE,GAAGA,SAAL;UAAgBC,EAAE,EAAEF;QAApB,CAAP;MACC,CAFc,CAAf;IAGH,CAdD,CAXc,CA2Bd;;;IACA,IAAIxB,YAAJ,EAAkB;MACdgB,SAAS,GADK,CAEd;;MACAhB,YAAY,CAAC2B,EAAb,CAAgB,gBAAhB,EAAkCR,gBAAlC;IACH,CAhCa,CAkCd;;;IACA,OAAO,MAAM;MACT,IAAInB,YAAJ,EAAkB;QAClBA,YAAY,CAAC4B,GAAb,CAAiB,gBAAjB,EAAmCT,gBAAnC;MACC;IACJ,CAJD;EAKD,CAxCQ,EAwCP,CAACnB,YAAD,CAxCO,CAAT,CA7CmD,CAwFnD;;EACAT,SAAS,CAAC,MAAM;IACd,MAAM;MAAEsC;IAAF,IAAeC,MAArB;;IACA,IAAID,QAAJ,EAAc;MACZ,MAAME,QAAQ,GAAG,IAAItC,MAAM,CAACuC,SAAP,CAAiBC,YAArB,CAAkCJ,QAAlC,CAAjB;MACA,MAAMK,MAAM,GAAGH,QAAQ,CAACI,SAAT,EAAf;MACA,MAAMnC,YAAY,GAAG,IAAIP,MAAM,CAAC2C,QAAX,CACnB1C,gBADmB,EAEnBE,UAAU,CAACyC,GAFQ,EAGnBH,MAHmB,CAArB;MAKAjC,eAAe,CAACD,YAAD,CAAf;IACD,CATD,MASO;MACLS,OAAO,CAACC,GAAR,CAAY,2BAAZ;IACD;EACF,CAdQ,EAcN,EAdM,CAAT;EAeA,oBACE;IAAK,SAAS,EAAC,iBAAf;IAAA,WAEKR,IAAI,IAAIJ,YAAR,iBACG;MAAK,EAAE,EAAC,OAAR;MAAgB,SAAS,EAAEQ,SAAS,GAAG,MAAH,GAAY,EAAhD;MAAA,uBACI;QAAK,EAAE,EAAG,MAAV;QAAA,UAAmB,KAAIJ,IAAI,CAACoC,IAAK,gBAAexC,YAAY,CAACyC,YAAa;MAA1E;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAHR,EAQGrC,IAAI,iBACD;MAAK,SAAS,EAAC,gBAAf;MAAA,wBAEI;QAAK,SAAS,EAAG,gBAAeE,WAAY,EAA5C;QAAA,wBACI;UAAA,4BAAQF,IAAI,CAACoC,IAAb;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAK,SAAS,EAAC,eAAf;UAAA,wBACI;YAAK,GAAG,EAAEpC,IAAI,CAACsC,QAAf;YAAyB,GAAG,EAAG,QAAOtC,IAAI,CAACoC,IAAK;UAAhD;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI;YAAK,SAAS,EAAC,YAAf;YAAA,wBACI;cAAU,KAAK,EAAEpC,IAAI,CAACwB,EAAtB;cAA0B,GAAG,EAAExB,IAAI,CAACuC;YAApC;cAAA;cAAA;cAAA;YAAA,QADJ,eAEI;cAAA,UAAK,GAAEvC,IAAI,CAACwB,EAAG,MAAKxB,IAAI,CAACuC,KAAM;YAA/B;cAAA;cAAA;cAAA;YAAA,QAFJ;UAAA;YAAA;YAAA;YAAA;UAAA,QAFJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,eAYI;QAAK,SAAS,EAAC,kBAAf;QAAA,uBACI;UAAQ,SAAS,EAAC,YAAlB;UAA+B,OAAO,EAAEjC,eAAxC;UAAA,UACM,aAAYN,IAAI,CAACoC,IAAK;QAD5B;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAZJ,EAkBKlC,WAAW,KAAK,WAAhB,iBACG;QAAK,SAAS,EAAC,mBAAf;QAAA,wBACI,QAAC,gBAAD;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAnBR;IAAA;MAAA;MAAA;MAAA;IAAA,QATN,EAoCGN,YAAY,iBACb;MAAK,SAAS,EAAC,mBAAf;MAAA,uBACE;QAAK,SAAS,EAAC,kBAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAK,SAAS,EAAC,QAAf;UAAA,wBACE;YAAK,SAAS,EAAC,eAAf;YAAA,wBACE;cAAA,UAAKA,YAAY,CAACwC;YAAlB;cAAA;cAAA;cAAA;YAAA,QADF,eAEE;cACE,GAAG,EAAG,oCAAmCxC,YAAY,CAAC0C,QAAS,EADjE;cAEE,GAAG,EAAG,aAAY1C,YAAY,CAACwC,IAAK;YAFtC;cAAA;cAAA;cAAA;YAAA,QAFF,eAME;cAAK,SAAS,EAAC,YAAf;cAAA,wBACE;gBAAU,KAAK,EAAExC,YAAY,CAAC4B,EAA9B;gBAAkC,GAAG,EAAE5B,YAAY,CAAC2C;cAApD;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAEE;gBAAA,UAAK,GAAE3C,YAAY,CAAC4B,EAAG,MAAK5B,YAAY,CAAC2C,KAAM;cAA/C;gBAAA;gBAAA;gBAAA;cAAA,QAFF;YAAA;cAAA;cAAA;cAAA;YAAA,QANF;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAYE;YAAK,SAAS,EAAC,OAAf;YAAA,uBACE;cAAA,UAAM,qBAAoB3C,YAAY,CAACyC,YAAa;YAApD;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QAZF;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QArCF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkED,CA1KD;;GAAM1C,K;;KAAAA,K;AA2KN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}